#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/5_ps_06082021/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
EA_sheet[[i, slidercol]] <- NoSliderMove
}
}
View(EA_sheet)
# for now, 'practice' column is deleted from EA_list. cnan put it back later if we want the practice video EA
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/5_ps_06082021/5_ps_06082021_cleaned_new.csv")
#this coding script creates columns in main EA qualtrics data sheet for each participants EA score on the videos they watched (adds 9 new columns to include practice video)
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
#go through EA sheet
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/5_ps_06082021/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
EA_sheet[[i, slidercol]] <- NoSliderMove
}
}
#store it
View(EA_sheet)
# for now, 'practice' column is deleted from EA_list. cnan put it back later if we want the practice video EA
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/5_ps_06082021/5_ps_06082021_cleaned_new.csv")
#this coding script creates columns in main EA qualtrics data sheet for each participants EA score on the videos they watched (adds 9 new columns to include practice video)
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
#go through EA sheet
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/5_ps_06082021/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
EA_sheet[[i, slidercol]] <- NoSliderMove
}
}
#store it
View(EA_sheet)
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
library(dplyr)
library(tidyverse)
library(Hmisc)
library(ggplot2)
require(reshape2)
library(corrplot)
library(data.table)
library(stats)
library(xtable)
library(knitr)
View(dat)
nrow(dat)
dat <- dat %>%
filter(meets_score_threshold ==TRUE,
Attn_Score >= 4)
View(dat)
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE,
Attn_Score == 4)
nrow(dat)
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
nrow(dat)
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE,
Attn_Score == 4)
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "TRUE"))
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
length(which(dat$meets_survey_and_task_thresholds == "FALSE"))
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==1)
nrow(dat)
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
#sample is 33
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
ea_colnames <- colnames(select(dat, starts_with("EA")))
#replace 999..0 values in the main dat dataframe as NA for all the EA videos
dat <- dat %>% mutate_at(vars(ea_colnames), ~na_if(.,999.0))
ea_dat <- dat %>% select(starts_with("EA_")) %>%
transmute(avg_EA = rowMeans(.,na.rm = TRUE)) %>%
as.data.frame()
View(ea_dat)
dat$avg_EA <- ea_dat$avg_EA
dat$avg_EA[is.nan(dat$avg_EA)]<-NA
dat %>%
select(starts_with("EA_")) %>%
colMeans(na.rm = TRUE)
# look at means for each video
dat %>%
select(starts_with("EA_")) %>%
colMeans(na.rm = TRUE) %>%
table()
# look at means for each video
dat %>%
select(starts_with("EA_")) %>%
colMeans(na.rm = TRUE) %>%
lable()
# look at means for each video
dat %>%
select(starts_with("EA_")) %>%
colMeans(na.rm = TRUE) %>%
kable()
# look at means for each video
dat %>%
select(starts_with("EA_")) %>%
colMeans(na.rm = TRUE) %>%
t() %>%
kable()
select_vars <- c("EA_120_4", "EA_128_2", "EA_167_2", "EA_173_6", "EA_174_3", "EA_181_2")
#avg_EA_select is teh average EA for each ps without the 2 bad videos
dat <-  dat %>% mutate(avg_EA_select = rowMeans(select(., select_vars), na.rm = TRUE))
dat %>%
select(avg_EA, avg_EA_select) %>%
t() %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
sample(5) %>%
t() %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
sample(dat, 5) %>%
t() %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
t() %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
t() %>%
head %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
#t() %>%
head %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
t() %>%
head %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
t() %>%
head %>%
table()
dat %>%
select(avg_EA, avg_EA_select) %>%
t() %>%
head %>%
kable()
dat %>%
select(avg_EA, avg_EA_select) %>%
# t() %>%
head %>%
kable()
summarize(dat$MaxFwd)
?table_by
mean(dat$MaxFwd)
sd(dat$MaxFwd)
mean(dat$MaxRev)
sd(dat$MaxRev)
meanfwd <- mean(dat$MaxFwd)
sdfwd<- sd(dat$MaxFwd)
length(which(dat$MaxFwd > 2*sdfwd))
dat$MaxFwd
sdfwd
2*sdfwd
length(which(dat$MaxFwd > meanfwd*sdfwd))
meanfwd*sdfwd
meanfwd+(2*sdfwd)
length(which(dat$MaxFwd > meanfwd+(2*sdfwd)))
length(which(dat$MaxFwd > meanfwd-(2*sdfwd)))
meanfwd-(2*sdfwd)
length(which(dat$MaxFwd < meanfwd-(2*sdfwd)))
meanfwd <- mean(dat$MaxFwd)
sdfwd<- sd(dat$MaxFwd)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd > meanfwd+(2*sdfwd)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd < meanfwd-(2*sdfwd)))
meanrev <- mean(dat$MaxRev)
sdrev <- sd(dat$MaxRev)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev > meanrev+(2*sdrev)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev < meanrev-(2*sdrev)))
meanfwd
sdfwd
meanrev
sdrev
melt.dat <- dat %>% dplyr::select(
ResponseId,
PSS_total,
QUIC_unpredict_total,
IRI_total,
BPAQ_Anger,
BPAQ_Physical,
BPAQ_Hostility,
BPAQ_Verbal,
BCE_total,
income,
SRGS_total,
SRDS_total,
SRPSF_Tot,
MASQ_AA,
MASQ_AD,
MASQ_GDA,
MASQ_GDD,
MAES_SUM,
MAES_MULTI,
avg_EA_select
) %>%
pivot_longer(-ResponseId, names_to = "variable", values_to = "value")
ggplot(data = melt.dat, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
long.dat.ea <- dat %>% select(
PSS_total,
QUIC_unpredict_total,
IRI_total,
BPAQ_Anger,
BPAQ_Physical,
BPAQ_Hostility,
BPAQ_Verbal,
BCE_total,
income,
SRGS_total,
SRDS_total,
SRPSF_Tot,
MASQ_AA,
MASQ_AD,
MASQ_GDA,
MASQ_GDD,
MAES_SUM,
MAES_MULTI,
avg_EA_select
) %>%
pivot_longer(-avg_EA_select, names_to = "variable", values_to = "value")
long.dat.ea %>%
filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(avg_EA_select, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("Average Empathic Accuracy")
long.dat.ea %>%
filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(avg_EA_select, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("Average Empathic Accuracy") +labs(color = "Legend")
long.dat.ea %>%
filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value.
ggplot(aes(avg_EA_select, value, colour = variable)) + geom_smooth() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") + xlab("Average Empathic Accuracy")
corr.dat <- dat %>% select(
PSS_total,
QUIC_unpredict_total,
IRI_total,
IRI_EC,
IRI_PT,
IRI_PD,
BPAQ_Anger,
BPAQ_Physical,
BPAQ_Hostility,
BPAQ_Verbal,
BCE_total,
income,
SRGS_total,
SRDS_total,
SRPSF_Tot,
MASQ_AA,
MASQ_AD,
MASQ_GDA,
MASQ_GDD,
MAES_SUM,
MAES_MULTI,
avg_EA,
avg_EA_select
) %>%
filter(avg_EA_select>0) %>%
cor(use="complete.obs") %>% kable(., caption = "Correlation Table for Key Variables", format = "markdown")
corr.dat
dat %>% select(
PSS_total,
QUIC_unpredict_total,
IRI_total,
BPAQ_Anger,
BPAQ_Physical,
BPAQ_Hostility,
BPAQ_Verbal,
BCE_total,
income,
SRGS_total,
SRDS_total,
SRPSF_Tot,
MASQ_AA,
MASQ_AD,
MASQ_GDA,
MASQ_GDD,
MAES_SUM,
MAES_MULTI,
avg_EA,
avg_EA_select
) %>%
cor(use="complete.obs") %>%
corrplot(insig = "p-value")
mssd <- read.csv("/Users/isabellakahhale/OneDrive - University of Pittsburgh/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
View(mssd)
mssd %>%
select(partID,X120_4_mssdX120)
mssd %>%
select(partID,X120_4_mssd)
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, color = partID)) + geom_smooth()
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, value, color = partID)) + geom_smooth()
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, color = partID)) + geom_dotplot()
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, color = partID)) + geom_dotplot() +  theme(legend.position="none")
mssd %>%
select(partID,X120_4_mssd)
mssd %>%
select(partID,X120_4_mssd)
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, color = partID)) + geom_dotplot() +  theme(legend.position="none") + coord_flip()
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, color = partID)) + geom_dotplot() +  theme(legend.position="none")
mssd %>%
select(partID,X120_4_mssd) %>%
ggplot(aes(X120_4_mssd, partID, color = partID)) + geom_dotplot() +  theme(legend.position="none")
#individual participant MSSD avgs
total_MSSD_per_participant <- rowMeans(c(mssd$X120_4_mssd:mssd$X181_2_mssd), na.rm=T)
total_MSSD_per_participant
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(c(mssd$X120_4_mssd:mssd$X181_2_mssd), na.rm=T)
mssd$total_MSSD_per_participant
colnames(mssd)
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(mssd[c(X120_4_mssd:X181_2_mssd)], na.rm=T)
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(mssd[c('X120_4_mssd':'X181_2_mssd')], na.rm=T)
total_MSSD_per_participant
mssd$total_MSSD_per_participant
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(c(
"mssd$X120_4_mssd",   "mssd$X128_2_mssd",   "mssd$X129_2_mssd",
"mssd$X147_2_mssd",   "mssd$X167_2_mssd",   "mssd$X173_6_mssd",   "mssd$X174_3_mssd",   "mssd$X181_2_mssd"
), na.rm=T)
mssd_vector<-c(mssd$X120_4_mssd,   mssd$X128_2_mssd, mssd$X129_2_mssd, mssd$X147_2_mssd, mssd$X167_2_mssd, mssd$X173_6_mssd, mssd$X174_3_mssd, mssd$X181_2_mssd)
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(mssd_vector, na.rm=T)
mssd_matrix<-as.matrix(c(mssd$X120_4_mssd,   mssd$X128_2_mssd, mssd$X129_2_mssd, mssd$X147_2_mssd, mssd$X167_2_mssd, mssd$X173_6_mssd, mssd$X174_3_mssd, mssd$X181_2_mssd))
View(mssd_matrix)
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(mssd, na.rm=T)
#individual participant MSSD avgs
mssd$total_MSSD_per_participant <- rowMeans(mssd[,3:10], na.rm=T)
mssd$total_MSSD_per_participant
view(mssd$total_MSSD_per_participant)
View(mssd)
histogram(mssd$total_MSSD_per_participant)
library(ggplot2)
ggplot(mssd$total_MSSD_per_participant, aes(x=weight)) + geom_histogram()
ggplot(mssd, aes(x=weight)) + geom_histogram()
plot(mssd$X, mssd$total_MSSD_per_participant)
ggplot(mssd, aes(x=X, y=total_MSSD_per_participant)) + geom_point()
ggplot(mssd, aes(x=X, y=total_MSSD_per_participant)) + geom_point() +
labs(title="Distribution of Average MSSD Values",
x="Participant", y = "MSSD")
head(mssd$total_MSSD_per_participant)
mssd$total_MSSD_per_participant <- rowMeans(mssd[,c(3, 4, 7, 8, 9, 10)], na.rm=T)
head(mssd$total_MSSD_per_participant)
ggplot(mssd, aes(x=X, y=total_MSSD_per_participant)) + geom_point() +
labs(title="Distribution of Average MSSD Values",
x="Participant", y = "MSSD")
