#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income) %>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PT, names_to = "variable", values_to = "value")
# look at same associations but instead of comparing to emphatic accuracy, compare to IRI subscales
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI_PT, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Perspective Taking") +labs(color = "Legend")
long.dat.ea <- dat %>%
select(#IRI_total,
IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income) %>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PT, names_to = "variable", values_to = "value")
long.dat.ea <- dat %>%
select(#IRI_total,
IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income) %>%
rename(#IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PT, names_to = "variable", values_to = "value")
# look at same associations but instead of comparing to emphatic accuracy, compare to IRI subscales
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI_PT, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Perspective Taking") +labs(color = "Legend")
long.dat.ea <- dat %>%
select(#IRI_total,
IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income) %>%
rename(#IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy = avg_EA_select,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PT, names_to = "variable", values_to = "value")
# look at same associations but instead of comparing to emphatic accuracy, compare to IRI subscales
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI_PT, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Perspective Taking") +labs(color = "Legend")
long.dat.ea <- dat %>%
select(#IRI_total,
IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
long.dat.ea <- dat %>%
select(#IRI_total,
IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
long.dat.ea <- dat %>%
select(#IRI_total,
#IRI_PT,
IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income) %>%
rename(#IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy = avg_EA_select,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_EC, names_to = "variable", values_to = "value")
# look at same associations but instead of comparing to emphatic accuracy, compare to IRI subscales
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI_EC, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Empathic Concern") +labs(color = "Legend")
long.dat.ea <- dat %>%
select(#IRI_total,
#IRI_PT,
IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
long.dat.ea <- dat %>%
select(#IRI_total,
#IRI_PT,
#IRI_EC,
IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)%>%
rename(#IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy = avg_EA_select,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PD, names_to = "variable", values_to = "value")
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI_EC, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Personal Distress") +labs(color = "Legend")
# look at same associations but instead of comparing to emphatic accuracy, compare to IRI subscales
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI_PD, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Personal Distress") +labs(color = "Legend")
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
long.dat.ea <- dat %>%
select(#IRI_total,
#IRI_PT,
#IRI_EC,
IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)%>%
rename(#IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy = avg_EA_select,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PD, names_to = "variable", values_to = "value")
long.dat.ea <- dat %>%
select(#IRI_total,
#IRI_PT,
#IRI_EC,
IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)%>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy = avg_EA_select,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI_PD, names_to = "variable", values_to = "value")
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)%>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy = avg_EA_select,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI, names_to = "variable", values_to = "value")
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Total") +labs(color = "Legend")
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
colnames(dat)
head(dat$Total)
mod1 <- lm(avg_EA_select ~ MAES_SUM + QUIC_unpredict_total + Total, data = dat)
summary(mod1)
mod1 <- lm(IRI_total ~ MAES_SUM + QUIC_unpredict_total + Total, data = dat)
summary(mod1)
mean(dat$IRI_total)
mod1 <- lm(IRI_EC ~ MAES_SUM + QUIC_unpredict_total + Total, data = dat)
summary(mod1)
mod1 <- lm(IRI_PT ~ MAES_SUM + QUIC_unpredict_total + Total, data = dat)
summary(mod1)
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
View(mssd)
View(dat)
View(mssd)
View(dat)
mssd <- rename(partID, ResponseID)
?renae=me
?rename
mssd <- rename(mssd, ResponseID = partID)
View(mssd)
dat <- full_join(mssd, dat, by = "ResponseId")
View(dat)
mssd <- rename(mssd, ResponseId = partID)
mssd <- rename(mssd, ResponseId = ResponseID)
dat <- full_join(mssd, dat, by = "ResponseId")
View(dat)
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, ResponseId = PartID)
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
View(mssd)
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
View(mssd)
mssd <- rename(mssd, ResponseId = partID)
dat <- full_join(mssd, dat, by = "ResponseId")
View(dat)
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
#sample is 33
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
#sample is 31
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
dat <- dat %>%
filter(dat$MaxFwd <= meanfwd+(2*sdfwd))
nrow(dat)
dat <- dat %>%
filter(dat$MaxRev <= meanrev+(2*sdfwd))
nrow(dat)
View(dat)
?left_join
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, ResponseId = partID)
dat <- left_join(dat, mssd, by = "ResponseId")
View(dat)
View(mssd)
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
View(dat)
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
#sample is 33
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
#sample is 31
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
dat <- dat %>%
filter(dat$MaxFwd <= meanfwd+(2*sdfwd))
nrow(dat)
dat <- dat %>%
filter(dat$MaxRev <= meanrev+(2*sdfwd))
nrow(dat)
head(dat$X120_4_mssd)
?starts_with
?ends_with
mssd_colnames <- colnames(select(dat, ends_with("mssd")))
mssd_colnames
mssd_dat <- dat %>% select(mssd_colnames)
View(mssd_dat)
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
as.data.frame()
View(mssd_dat)
#assign that average mssd vector back to original DF
dat$avg_mssd <- mssd_dat$avg_mssd
dat %>%
select(mssd_colnames) %>%
colMeans(na.rm = TRUE) %>%
t() %>%
kable()
dat$avg_mssd
?rowwise
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(., na.rm = TRUE)) %>%
as.data.frame()
sd_mssd = rowwise(sd((., na.rm = TRUE))) %>%
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(sd((., na.rm = TRUE)))) %>%
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(sd(., na.rm = TRUE))) %>%
as.data.frame()
dat %>%
select(mssd_colnames) %>%
rowwise() %>%
mmutate(avg_mssd = mean(., na.rm= TRUE))
dat %>%
select(mssd_colnames) %>%
rowwise() %>%
mutate(avg_mssd = mean(., na.rm= TRUE))
?transmute
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(sd(., na.rm = TRUE))) %>%
as.data.frame()
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
as.data.frame()
View(mssd_dat)
?rowwise
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = rowwise(sd(mssd_colnames, na.rm = TRUE)))
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = (sd(mssd_colnames, na.rm = TRUE)))
mssd_colnames
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = sd(select(ends_with("mssd"), na.rm = TRUE)))
?sd
?rowwise
?rows_delete
?rowSds
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = sd(c(select(ends_with("mssd")), na.rm = TRUE)))
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd = sd(c_across(X120_4_mssd:practice_mssd)))
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd = sd(c_across(X120_4_mssd:practice_mssd))) %>%
as.data.frame()
View(mssd_dat)
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd= sd(c_across(X120_4_mssd:practice_mssd))) %>%
as.data.frame()
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd= sd(c_across(X120_4_mssd:practice_mssd))) %>%
as.data.frame()
#assign that average mssd vector back to original DF
dat$avg_mssd <- mssd_dat$avg_mssd
dat$sd_mssd <- mssd_dat$sd_mssd
mean(dat$avg_mssd)
# calcuate average mssd across whole dataset
overall_avg_mssd <- mean(dat$avg_mssd)
overall_avg_mssd
overall_sd_mssd <- mean(dat$sd_mssd)
overall_sd_mssd # ~ 5
length(which(dat$avg_mssd <overall_avg_mssd & dat$sd_mssd < overall_sd_mssd))
# calcuate average mssd across whole dataset
overall_avg_mssd <- median(dat$avg_mssd)
overall_avg_mssd # ~ 5
overall_sd_mssd <- median(dat$sd_mssd)
overall_sd_mssd # ~ 5
length(which(dat$avg_mssd <overall_avg_mssd & dat$sd_mssd < overall_sd_mssd))
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd_mssd))
& dat$sd_mssd < overall_sd_mssd))
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd_mssd)))
length(which(dat$avg_mssd < (overall_avg_mssd-2*overall_sd_mssd)))
overall_avg_mssd-2*overall_sd_mssd
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd(overall_avg_mssd))))
sd(overall_avg_mssd)
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd(dat$avg_mssd))))
overall_avg_mssd-2*sd(dat$avg_mssd)
overall_avg_mssd-sd(dat$avg_mssd
overall_avg_mssd-sd(dat$avg_mssd)
length(which(dat$avg_mssd < (overall_avg_mssd-sd(dat$avg_mssd)))) # how many people are 1 standard deviation outside of the sample average mssd
length(which(dat$sd_mssd < (overall_sd_mssd-sd(dat$sd_mssd))))
overall_sd_mssd-sd(dat$sd_mssd)
overall_sd_mssd
overall_avg_mssd <- mean(dat$avg_mssd)
overall_avg_mssd # ~ mean is about 5. median is about 4
overall_sd_mssd <- mean(dat$sd_mssd)
overall_sd_mssd # ~ mean is about 5, median is about 2
length(which(dat$avg_mssd < (overall_avg_mssd-sd(dat$avg_mssd)))) # how many people are 1 standard deviation outside of the sample average mssd -- zero.
overall_avg_mssd-sd(dat$avg_mssd)
length(which(dat$sd_mssd < (overall_sd_mssd-sd(dat$sd_mssd))))
overall_sd_mssd-sd(dat$sd_mssd)
overall_sd_mssd
sd(dat$sd_mssd)
