}
Persist_total = Persist_total + temp
}
print(Persist_total)
}
ShiftPersist_total = Shift_total + Persist_total
data$Shift_total[i] <- Shift_total
data$Persist_total[i] <- Persist_total
data$ShiftPersist_total[i] <- ShiftPersist_total
#### Attention Checks ####
#bring this up to the loop section
#Attn_1, correct score is 2
#Attn_2, correct score is 2
#Attn_3, correct score is 7
#Attn_4, correct score is 4
Attn_Score = 0
a = 0
for (a in 1:length(4)) {
if(data$Attn_1[i] == 2) {
Attn_Score = Attn_Score + 1
}
if(data$Attn_2[i] == 2) {
Attn_Score = Attn_Score + 1
}
if(data$Attn_3[i] == 7) {
Attn_Score = Attn_Score + 1
}
if(data$Attn_4[i] == 4) {
Attn_Score = Attn_Score + 1
}
}
data$Attn_Score[i] <- Attn_Score
}
#done w the loop calculations
#### MASQ SHORT #####
#this sholuld not be in the loop
#go through and change all "prefer not to answer to 0
## these are differnt columns now
#used to be 51 to 112 but when we added IRI it shifted
data[ ,72:133] [data[ ,72:133] == 6 ] <- 0
#general distress - anxious syx
data$MASQ_GDA = varScore(data, Forward= c('MASQ4', 'MASQ8', 'MASQ11', 'MASQ14', 'MASQ16', 'MASQ20', 'MASQ26', 'MASQ32','MASQ35', 'MASQ55', 'MASQ59'), Range = c(0,5))
#anxious arousal
data$MASQ_AA = varScore(data, Forward= c('MASQ2', 'MASQ6', 'MASQ13', 'MASQ17', 'MASQ19', 'MASQ24', 'MASQ28', 'MASQ30', 'MASQ37', 'MASQ40', 'MASQ42', 'MASQ44', 'MASQ46', 'MASQ48', 'MASQ52', 'MASQ54', 'MASQ62'), Range = c(0,5) )
#anhedonic depression
data$MASQ_AD = varScore(data, Forward= c('MASQ18', 'MASQ25', 'MASQ33', 'MASQ41', 'MASQ50', 'MASQ51', 'MASQ57', 'MASQ61'), Reverse= c('MASQ3', 'MASQ7', 'MASQ10', 'MASQ15', 'MASQ22', 'MASQ27', 'MASQ39', 'MASQ43', 'MASQ47', 'MASQ49', 'MASQ53', 'MASQ56', 'MASQ58', 'MASQ60'), Range = c(0,5) )
#depression
data$MASQ_GDD = varScore(data, Forward= c('MASQ1', 'MASQ5', 'MASQ9', 'MASQ12', 'MASQ21', 'MASQ23', 'MASQ29', 'MASQ31','MASQ34', 'MASQ36', 'MASQ38','MASQ45'), Range = c(0,5))
#### BPAQ #####
#valid scores are 1-7, prefer not to answer is 8
#used to be 113-117 and 119 and 142
#go through and change all "prefer not to answer to 0
data[ ,134:138] [data[ , 134:138] == 8 ] <- 0
#separated into 2 cause theres an attention check in the middle
data[ ,140:163] [data[ , 140:163] == 8] <- 0
# 1-9 Physical Aggression; 10-14 Verbal Aggression; 15-21 Anger; 22-29 Hostility
data$BPAQ_Physical = varScore(data, Forward= c('BPAQ01','BPAQ02','BPAQ03','BPAQ04','BPAQ05','BPAQ06','BPAQ07','BPAQ08','BPAQ09'), Range = c(0,7))
data$BPAQ_Verbal = varScore(data, Forward= c('BPAQ10','BPAQ11', 'BPAQ12','BPAQ13','BPAQ14'), Range = c(0,7))
data$BPAQ_Anger = varScore(data, Forward= c('BPAQ15','BPAQ16','BPAQ17','BPAQ18','BPAQ19','BPAQ20','BPAQ21'), Range = c(0,7))
data$BPAQ_Hostility = varScore(data, Forward= c('BPAQ22','BPAQ23','BPAQ24','BPAQ25','BPAQ26','BPAQ27','BPAQ28','BPAQ20'), Range = c(0,7))
#### BCEs #####
data$BCE_total = varScore(data, Forward= c('BCE_1','BCE_2','BCE_3','BCE_4','BCE_5','BCE_6','BCE_7','BCE_8', 'BCE_9', 'BCE_10'), Range = c(0,1))
#### MAES ####
#used to be 183:234
#if we pull columm 8 that is subject ID, but its a character and the maes function doesnt like this. just append onto the general frame after, ok to not link w sub ID?
#uncomment this
maes_frame <- data[,c(204:255)]
#open up all the scripts in the MACE_R_code folder (28 of them and RUN them all). then call fx maes.calc
## figure this out later
#it doesn't like having a character
#uncomment this
maes_scores <- maes.calc(mace_frame = maes_frame, start.col = 1)
#add maes_scores to final datasheet at the end
# the subj column is junk
### SRGS-R ####
#i think we just sum everything.
data$SRGS_total = varScore(data, Forward= c('SRGS_1','SRGS_2','SRGS_3','SRGS_4','SRGS_5','SRGS_6','SRGS_7','SRGS_8', 'SRGS_9', 'SRGS_10', 'SRGS_11', 'SRGS_12', 'SRGS_13', 'SRGS_14', 'SRGS_15'), Range = c(-3,3))
##### SRD Scale #####
#total score is summing 1-50
#valid scores are 0, 1,2. no prefer not to answer optoin
#grep("SRDS_1", colnames(data))
#used to be 250:298
list <- names(data[,271:319])
#list <- names(data[,250:298])
#list <- names(data[,273:321])
data$SRDS_total = varScore(data, Forward = list, Range = c(0,2))
#### adult SRP SF #####
# acceptable scores are 1-5, no "prefer not to ans"
# reverse score SRPSF_2
#
# SRPSFTot	sum all items
# Reverse score, and then sum according to the following sub scales:
# SRPSFInt	Interpersonal items: 7, 9, 10, 15, 19, 23, 26
# SRPSFAff	Affective items: 3, 8, 13, 16, 18, 24, 28
# SRPSFLif	Lifestyle items: 1, 4, 11, 14, 17, 21, 27
# SRPSFAns	Antisocial: 20 or 2, 5, 6, 12, 22, 25, 29
# Since item 20 OR 2 can be used, the scoring script calculates two scores for SRPSFAns:
# 	SRPSFAns20	uses question 20
# 	SRPSFAns2	uses question 2
data$SRPSF_Int = varScore(data, Forward= c('SRP_7','SRP_9', 'SRP_10', 'SRP_15', 'SRP_19', 'SRP_23','SRP_26'), Range = c(1,5))
data$SRPSF_Aff = varScore(data, Forward = c('SRP_3', 'SRP_8', 'SRP_13', 'SRP_16','SRP_18', 'SRP_24','SRP_28'), Range = c(1,5))
data$SRPSF_Lif = varScore(data, Forward = c('SRP_1', 'SRP_4', 'SRP_11', 'SRP_14','SRP_17', 'SRP_21','SRP_27'), Range = c(1,5))
data$SRPSF_Ans20 = varScore(data, Forward = c('SRP_20' , 'SRP_5', 'SRP_6','SRP_12','SRP_22', 'SRP_25', 'SRP_29'), Range = c(1,5))
data$SRPSF_Ans2 = varScore(data, Forward = c('SRP_5', 'SRP_6','SRP_12','SRP_22', 'SRP_25', 'SRP_29'), Reverse = ('SRP_2'), Range = c(1,5))
#choosing go to with Ans20 for the total scoring, but can switch to Ans2
data$SRPSF_Tot = data$SRPSF_Int + data$SRPSF_Aff + data$SRPSF_Lif + data$SRPSF_Ans20
### CASES ####
#Cognitive	1, 6, 9, 12, 17, 18, 21, 23, 26, 28
data$CASES_cog[i]= sum(data$CASES_1[i] + CASES_6[i] + CASES_9[i] +  CASES_12[i] + CASES_17[i] + CASES_18[i] + CASES_21[i] + CASES_23[i] + CASES_26[i] + CASES_28[i])
#Affective	2, 5, 8, 10, 13, 16, 19, 22, 25, 27
data$CASES_aff[i] = sum(data$CASES_2[i] + CASES_5[i] + CASES_8[i] +  CASES_10[i] + CASES_13[i] + CASES_16[i] + CASES_19[i] + CASES_22[i] + CASES_25[i] + CASES_27[i])
#Somatic	3, 4, 7, 11, 14, 15, 20, 24, 29, 30
data$CASES_som[i] = sum(data$CASES_3[i] + CASES_4[i] + CASES_7[i] +  CASES_11[i] + CASES_14[i] + CASES_15[i] + CASES_20[i] + CASES_24[i] + CASES_29[i] + CASES_30[i])
#Positive	1, 9, 17, 23, 28, 5, 8, 13, 22, 25, 3, 11, 15, 20, 30
data$CASES_pos[i] = sum(data$CASES_1[i] + CASES_9[i] + CASES_17[i] +  CASES_23[i] + CASES_28[i] + CASES_5[i] + CASES_8[i] +
CASES_13[i] + CASES_22[i] + CASES_25[i] + CASES_3[i] + CASES_11[i] + + CASES_15[i] + + CASES_20[i] +
CASES_30[i])
#Negative	6, 12, 18, 21, 26, 2, 10, 16, 19, 27, 4, 7, 14, 24, 29
data$CASES_neg[i] = sum(data$CASES_6[i] + CASES_12[i] + CASES_18[i] +  CASES_21[i] + CASES_26[i] + CASES_2[i] + CASES_10[i] +
CASES_16[i] + CASES_19[i] + CASES_27[i] + CASES_4[i] + CASES_7[i] + + CASES_14[i] + + CASES_24[i] +
CASES_29[i])
#Cognitive-Positive	1, 9, 17, 23, 28
data$CASES_cogpos[i] = sum(data$CASES_1[i] + CASES_9[i] + CASES_17[i] +  CASES_23[i] + CASES_28[i])
#Cognitive-Negative	6, 12, 18, 21, 26
data$CASES_cogneg[i]= sum(CASES_6[i] + CASES_12[i] + CASES_18[i] + CASES_21[i] + CASES_26[i])
#Affective – Positive  5, 8, 13, 22, 25
data$CASES_affpos[i] = sum(CASES_5[i] + CASES_8[i] + CASES_13[i] + CASES_22[i] + CASES_25[i])
#Affective – Negative  2, 10, 16, 19, 27
data$CASES_affneg[i] = sum(data$CASES_2[i] +  CASES_10[i] + CASES_16[i] + CASES_19[i] + CASES_27[i])
#Somatic – Positive	3, 11, 15, 20, 30
data$CASES_sompos[i] = sum(data$CASES_3[i] +  CASES_11[i] + CASES_15[i] + CASES_20[i] + CASES_30[i])
#Somatic – Negative	4, 7, 14, 24, 29
data$CASES_somneg[i] = sum(CASES_4[i] + CASES_7[i] + CASES_14[i] + CASES_24[i] + CASES_29[i])
#Total Empathy: Sum scores (0, 1 or 2) for all 30 items.
data$CASES_total[i] = data$CASES_cog[i] + data$CASES_aff[i] + data$CASES_som[i]
#### RFQ-8 ####
# from syntax
# helpful for recoding SPSS into R https://www.isdscotland.org/About-ISD/Methodologies/_docs/SPSS-syntax-to-R_v1-1.pdf
#RECODE RFQ1 RFQ2 RFQ3 RFQ4 RFQ5 RFQ6 (1=3) (2=2) (3=1) (4=0) (5=0) (6=0) (7=0)
#INTO RFQc1 RFQc2 RFQc3 RFQc4 RFQc5 RFQc6.
# NEED CODE TO ADD THIS ONTO THE COLS THAT EXIST
#
# data %>%
#   #select(RFQ8_1, RFQ8_2, RFQ8_3, RFQ8_4, RFQ8_5, RFQ8_6) %>%  # i dont think we need this
#   mutate(RFQ8_c1 = recode(RFQ8_1, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0,7=0),
#          RFQ8_c2 = recode(RFQ8_2, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0,7=0),
#          RFQ8_c3 = recode(RFQ8_3, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0,7=0),
#          RFQ8_c4 = recode(RFQ8_4, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0,7=0),
#          RFQ8_c5 = recode(RFQ8_5, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0,7=0),
#          RFQ8_c6 = recode(RFQ8_6, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0,7=0)
#          )
#
# # RECODE RFQ2 RFQ4 RFQ5 RFQ6 RFQ8 (1=0) (2=0) (3=0) (4=0) (5=1) (6=2) (7=3)
# # INTO RFQu2 RFQu4 RFQu5 RFQu6 RFQu8.
#
# data %>%
#   mutate(RFQ8_u2 = recode(RFQ8_2, 1=0, 2=0, 3=0, 4=0, 5=1, 6=2, 7=3),
#          RFQ8_u4 = recode(RFQ8_4, 1=0, 2=0, 3=0, 4=0, 5=1, 6=2, 7=3),
#          RFQ8_u5 = recode(RFQ8_5, 1=0, 2=0, 3=0, 4=0, 5=1, 6=2, 7=3),
#          RFQ8_u6 = recode(RFQ8_6, 1=0, 2=0, 3=0, 4=0, 5=1, 6=2, 7=3),
#          RFQ8_u8 = recode(RFQ8_8, 1=0, 2=0, 3=0, 4=0, 5=1, 6=2, 7=3),
#          )
#
# # RECODE RFQ7 (1=3) (2=2) (3=1) (4=0) (5=0) (6=0) (7=0) INTO RFQu7.
# data %>%
#   mutate(RFQ8_u7 = recode(RFQ8_7, 1=3, 2=2, 3=1, 4=0, 5=0, 6=0, 7=0)
#     )
#
#
# # COMPUTE RFQ_c= mean (RFQc1,RFQc2,RFQc3,RFQc4,RFQc5,RFQc6).
#
# data %>% mutate(RFQ8_c = mean(RFQ8_c1,RFQ8_c2,RFQ8_c3,RFQ8_c4,RFQ8_c5,RFQ8_c6))
#
# # COMPUTE RFQ_u= mean (RFQu2,RFQu4,RFQu5,RFQu6,RFQu7,RFQu8).
#
# data %>% mutate(RFQ8_u = mean(RFQ8_u2,RFQ8_u4,RFQ8_u5,RFQ8_u6,RFQ8_u7,RFQ8_u8))
#
#replace this with the subject number column
data <- bind_cols(data, maes_scores)
#WRITE TITLE FOR NEW SHEET HERE, follow  convention of teh folder ie number of participants, _ps_date _cleaneddata
# e.g., 5_ps_06082021_cleaneddata
title <- "/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_noCASESRFQ.csv"
write.csv(data, title)
#goes to analysis folder, pull to data folder
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_noCASESRFQ_pythonEA.csv")
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
#go through EA sheet
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/EA_Task/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
}
EA_sheet[[i, slidercol]] <- NoSliderMove
}
# for now, 'practice' column is deleted from EA_list. cnan put it back later if we want the practice video EA
# need to do this for individual sheet
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_noCASESRFQ_pythonEA.csv")
#this coding script creates columns in main EA qualtrics data sheet for each participants EA score on the videos they watched (adds 9 new columns to include practice video)
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
#go through EA sheet
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/EA_Task/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
}
EA_sheet[[i, slidercol]] <- NoSliderMove
}
slidercol
lidercol <- paste0("NoSliderMove")
slidercol <- paste0("NoSliderMove")
# for now, 'practice' column is deleted from EA_list. cnan put it back later if we want the practice video EA
# need to do this for individual sheet
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_noCASESRFQ_pythonEA.csv")
#this coding script creates columns in main EA qualtrics data sheet for each participants EA score on the videos they watched (adds 9 new columns to include practice video)
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
#go through EA sheet
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/EA_Task/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
}
EA_sheet[[i, slidercol]] <- NoSliderMove
}
#store it
#write.csv(EA_sheet, "/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/20_ps_02212022_rmdcleaned_pythonEA_withEA.csv")
write.csv(EA_sheet, "/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_pythonEA_withEA.csv")
# for now, 'practice' column is deleted from EA_list. cnan put it back later if we want the practice video EA
# need to do this for individual sheet
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_noCASESRFQ_pythonEA.csv")
#this coding script creates columns in main EA qualtrics data sheet for each participants EA score on the videos they watched (adds 9 new columns to include practice video)
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
#go through EA sheet
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/EA_Task/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
}
EA_sheet[[i, slidercol]] <- NoSliderMove
}
#store it
write.csv(EA_sheet, "/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_pythonEA_withEA.csv")
i
column
column
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
column
slidercol
empacc
videolist <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/video_list.csv")
#replace this path with latest EA sheet, the NEW and CLEANED version!!
EA_sheet <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/30_ps_05232022/30_ps_05232022_rmdcleaned_noCASESRFQ_pythonEA.csv")
#this coding script creates columns in main EA qualtrics data sheet for each participants EA score on the videos they watched (adds 9 new columns to include practice video)
#join this at tend end of EA_sheet
EA_list <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/EA_list.csv")
EA_sheet <- plyr::rbind.fill(EA_sheet, EA_list)
View(EA_sheet)
View(EA_list)
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/EA_Task/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
}
EA_sheet[[i, slidercol]] <- NoSliderMove
}
View(EA_sheet)
v
#uncomment and use this -- but for getting rid of the NAs/pilot purposes, starting at 13
for (i in 1:nrow(EA_sheet)) {
#for (i in 13:21) {
# this value should be 0 unless the code enteres this loop (prompted by an NA value for empacc)
NoSliderMove = 0
#grab identifier & store it
#pulling this from Q267 whihc is whre they put in their ID. for some reason the python script that makes the responses_by_participant folder spits out the folders based on this column, not the responseID
identifier = EA_sheet$Q267[i]
#identifier = EA_sheet$ResponseId[i]
#then go into through responses_by_particpant folder and loop through each participant
#and then each vid in the list for every participant
for (v in 1:nrow(videolist)) {
filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/20_ps_02212022/EA_Task/responses_by_participant/", identifier, "/", videolist$Vid_List[v], ".csv", sep = "")
if(file.exists(filename)) {
current_vid <- read.csv(filename)
} else {
#go out of this loop and back to EA sheet general loop to grab the next person
#next??
print("filename doesn't exist")
print(filename)
break
}
#whatever that vidoe is we're on, pull up the target rating
target_filename <- paste("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/EA_Task/Task_Videos/cropped_target_ratings_in_study/cropped_target_ratings/cropped_target_", videolist$Vid_List[v], ".csv", sep = "")
target_vid <- read.csv(target_filename)
#compare that vid$rating to teh target$rating
empacc <- cor(target_vid$target_rating, current_vid$rating)
#this happens if there is no deviation at all from 50. put a 999 there for now
if(is.na(empacc)) {
empacc = 999
NoSliderMove = 1
}
#if someone doesn't move the slider for a video, give
#put EA in the right column in qualtrics
#dynamically define the column name based on the current video
column <- paste0("EA_", videolist$Vid_List[v], sep = "")
slidercol <- paste0("NoSliderMove")
# i'm in i row (identifier)
EA_sheet[[i, column]] <- empacc
}
EA_sheet[[i, slidercol]] <- NoSliderMove
v = v +1
}
#store it
v
empacc
#install.packages("MplusAutomation")
library(MplusAutomation)
library(lavaan)
library(haven)
library(tidyverse)
library(dplyr)
maindata <- read_spss("/Users/isabellakahhale/OneDrive/Isabella/Research/PYS_IK/LF_Psychopathy_Paper/IQ SRP CP IC.sav")
View(maindata)
View(mod1)
