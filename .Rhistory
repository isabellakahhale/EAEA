View(dat)
?left_join
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, ResponseId = partID)
dat <- left_join(dat, mssd, by = "ResponseId")
View(dat)
View(mssd)
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
View(dat)
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
#sample is 33
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
#sample is 31
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
dat <- dat %>%
filter(dat$MaxFwd <= meanfwd+(2*sdfwd))
nrow(dat)
dat <- dat %>%
filter(dat$MaxRev <= meanrev+(2*sdfwd))
nrow(dat)
head(dat$X120_4_mssd)
?starts_with
?ends_with
mssd_colnames <- colnames(select(dat, ends_with("mssd")))
mssd_colnames
mssd_dat <- dat %>% select(mssd_colnames)
View(mssd_dat)
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
as.data.frame()
View(mssd_dat)
#assign that average mssd vector back to original DF
dat$avg_mssd <- mssd_dat$avg_mssd
dat %>%
select(mssd_colnames) %>%
colMeans(na.rm = TRUE) %>%
t() %>%
kable()
dat$avg_mssd
?rowwise
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(., na.rm = TRUE)) %>%
as.data.frame()
sd_mssd = rowwise(sd((., na.rm = TRUE))) %>%
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(sd((., na.rm = TRUE)))) %>%
mssd_dat <- dat %>%
select(mssd_colnames) %>%
transmute(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(sd(., na.rm = TRUE))) %>%
as.data.frame()
dat %>%
select(mssd_colnames) %>%
rowwise() %>%
mmutate(avg_mssd = mean(., na.rm= TRUE))
dat %>%
select(mssd_colnames) %>%
rowwise() %>%
mutate(avg_mssd = mean(., na.rm= TRUE))
?transmute
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE),
sd_mssd = rowwise(sd(., na.rm = TRUE))) %>%
as.data.frame()
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
as.data.frame()
View(mssd_dat)
?rowwise
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = rowwise(sd(mssd_colnames, na.rm = TRUE)))
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = (sd(mssd_colnames, na.rm = TRUE)))
mssd_colnames
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = sd(select(ends_with("mssd"), na.rm = TRUE)))
?sd
?rowwise
?rows_delete
?rowSds
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd = sd(c(select(ends_with("mssd")), na.rm = TRUE)))
dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd = sd(c_across(X120_4_mssd:practice_mssd)))
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd = sd(c_across(X120_4_mssd:practice_mssd))) %>%
as.data.frame()
View(mssd_dat)
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd= sd(c_across(X120_4_mssd:practice_mssd))) %>%
as.data.frame()
mssd_dat <- dat %>%
select(mssd_colnames) %>%
mutate(avg_mssd = rowMeans(.,na.rm = TRUE)) %>%
rowwise() %>%
mutate(sd_mssd= sd(c_across(X120_4_mssd:practice_mssd))) %>%
as.data.frame()
#assign that average mssd vector back to original DF
dat$avg_mssd <- mssd_dat$avg_mssd
dat$sd_mssd <- mssd_dat$sd_mssd
mean(dat$avg_mssd)
# calcuate average mssd across whole dataset
overall_avg_mssd <- mean(dat$avg_mssd)
overall_avg_mssd
overall_sd_mssd <- mean(dat$sd_mssd)
overall_sd_mssd # ~ 5
length(which(dat$avg_mssd <overall_avg_mssd & dat$sd_mssd < overall_sd_mssd))
# calcuate average mssd across whole dataset
overall_avg_mssd <- median(dat$avg_mssd)
overall_avg_mssd # ~ 5
overall_sd_mssd <- median(dat$sd_mssd)
overall_sd_mssd # ~ 5
length(which(dat$avg_mssd <overall_avg_mssd & dat$sd_mssd < overall_sd_mssd))
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd_mssd))
& dat$sd_mssd < overall_sd_mssd))
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd_mssd)))
length(which(dat$avg_mssd < (overall_avg_mssd-2*overall_sd_mssd)))
overall_avg_mssd-2*overall_sd_mssd
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd(overall_avg_mssd))))
sd(overall_avg_mssd)
length(which(dat$avg_mssd < (overall_avg_mssd-2*sd(dat$avg_mssd))))
overall_avg_mssd-2*sd(dat$avg_mssd)
overall_avg_mssd-sd(dat$avg_mssd
overall_avg_mssd-sd(dat$avg_mssd)
length(which(dat$avg_mssd < (overall_avg_mssd-sd(dat$avg_mssd)))) # how many people are 1 standard deviation outside of the sample average mssd
length(which(dat$sd_mssd < (overall_sd_mssd-sd(dat$sd_mssd))))
overall_sd_mssd-sd(dat$sd_mssd)
overall_sd_mssd
overall_avg_mssd <- mean(dat$avg_mssd)
overall_avg_mssd # ~ mean is about 5. median is about 4
overall_sd_mssd <- mean(dat$sd_mssd)
overall_sd_mssd # ~ mean is about 5, median is about 2
length(which(dat$avg_mssd < (overall_avg_mssd-sd(dat$avg_mssd)))) # how many people are 1 standard deviation outside of the sample average mssd -- zero.
overall_avg_mssd-sd(dat$avg_mssd)
length(which(dat$sd_mssd < (overall_sd_mssd-sd(dat$sd_mssd))))
overall_sd_mssd-sd(dat$sd_mssd)
overall_sd_mssd
sd(dat$sd_mssd)
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)%>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy_select = avg_EA_select,
Empathic_Accuracy = avg_EA,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI, names_to = "variable", values_to = "value")
library(dplyr)
library(tidyverse)
library(Hmisc)
library(ggplot2)
require(reshape2)
library(corrplot)
library(data.table)
library(stats)
library(xtable)
library(knitr)
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
income)%>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy_select = avg_EA_select,
Empathic_Accuracy = avg_EA,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI, names_to = "variable", values_to = "value")
#uncomment and use this version if we need to first calcuate the summary EA stuff. the dat below already has those as cols. also would need to run second code chunk and change from eval = FALSE
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
library(dplyr)
library(tidyverse)
library(Hmisc)
library(ggplot2)
require(reshape2)
library(corrplot)
library(data.table)
library(stats)
library(xtable)
library(knitr)
meanfwd <- mean(dat$MaxFwd)
sdfwd<- sd(dat$MaxFwd)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd > meanfwd+(2*sdfwd)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd < meanfwd-(2*sdfwd)))
meanrev <- mean(dat$MaxRev)
sdrev <- sd(dat$MaxRev)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev > meanrev+(2*sdrev)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev < meanrev-(2*sdrev)))
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
#sample is 33
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
#sample is 31
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
dat <- dat %>%
filter(dat$MaxFwd <= meanfwd+(2*sdfwd))
nrow(dat)
dat <- dat %>%
filter(dat$MaxRev <= meanrev+(2*sdfwd))
nrow(dat)
#uncomment and use this version if we need to first calcuate the summary EA stuff. the dat below already has those as cols. also would need to run second code chunk and change from eval = FALSE
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
library(dplyr)
library(tidyverse)
library(Hmisc)
library(ggplot2)
require(reshape2)
library(corrplot)
library(data.table)
library(stats)
library(xtable)
library(knitr)
View(dat)
meanfwd <- mean(dat$MaxFwd)
meanfwd
meanfwd <- mean(dat$MaxFwd, na.rm = TRUE)
meanfwd
meanfwd <- mean(dat$MaxFwd, na.rm = TRUE)
sdfwd<- sd(dat$MaxFwd, na.rm = TRUE)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd > meanfwd+(2*sdfwd)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd < meanfwd-(2*sdfwd)))
meanrev <- mean(dat$MaxRev, na.rm = TRUE)
sdrev <- sd(dat$MaxRev, na.rm = TRUE)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev > meanrev+(2*sdrev)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev < meanrev-(2*sdrev)))
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
#sample is 33
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
#sample is 31
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
dat <- dat %>%
filter(dat$MaxFwd <= meanfwd+(2*sdfwd))
nrow(dat)
dat <- dat %>%
filter(dat$MaxRev <= meanrev+(2*sdfwd))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
length(which(dat$MaxFwd <= meanfwd+(2*sdfwd)))
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
length(which(dat$MaxFwd >= meanfwd+(2*sdfwd)))
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
length(which(dat$MaxFwd < meanfwd+(2*sdfwd)))
#uncomment and use this version if we need to first calcuate the summary EA stuff. the dat below already has those as cols. also would need to run second code chunk and change from eval = FALSE
dat <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Data/participants/Masterdata_03292022.csv")
library(dplyr)
library(tidyverse)
library(Hmisc)
library(ggplot2)
require(reshape2)
library(corrplot)
library(data.table)
library(stats)
library(xtable)
library(knitr)
meanfwd <- mean(dat$MaxFwd, na.rm = TRUE)
sdfwd<- sd(dat$MaxFwd, na.rm = TRUE)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd > meanfwd+(2*sdfwd)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxFwd < meanfwd-(2*sdfwd)))
meanrev <- mean(dat$MaxRev, na.rm = TRUE)
sdrev <- sd(dat$MaxRev, na.rm = TRUE)
#how many people have a maxfwd value that is greater than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev > meanrev+(2*sdrev)))
#how many people have a maxfwd value that is less than the mean of hte dataset plus 2 times the standard deviatoin
length(which(dat$MaxRev < meanrev-(2*sdrev)))
mssd <- read.csv("/Users/isabellakahhale/OneDrive/Isabella/Research/EA-EA/Analysis/mssd03242022.csv")
mssd <- rename(mssd, subID = partID)
dat <- left_join(dat, mssd, by = "subID")
nrow(dat)
#filter out people who don't get all 4 qualtics attention correct
dat <- dat %>%
filter(meets_survey_score_threshold ==TRUE) # attn score = 4
nrow(dat)
#number of people who do'nt pass 14/16 threshold
length(which(dat$meets_task_score_threshold == "FALSE"))
#filter out those people
dat <- dat %>%
filter(meets_task_score_threshold ==TRUE)
nrow(dat)
length(which(dat$NoSliderMove == "1"))
dat <- dat %>%
filter(NoSliderMove ==0)
nrow(dat)
# people who didn't complete digit span task -- look at total digit span column, and make sure its not NA
length(which(is.na(dat$Total)))
dat <- dat %>%
filter(!is.na(dat$Total))
nrow(dat)
# exclude based on having digit span forward or backwards  more than 2 sds outside of the mean
length(which(dat$MaxFwd> meanfwd+(2*sdfwd)))
dat <- dat %>%
filter(dat$MaxFwd <= meanfwd+(2*sdfwd))
nrow(dat)
length(which(dat$MaxRev> meanrev+(2*sdrev)))
dat <- dat %>%
filter(dat$MaxRev <= meanrev+(2*sdrev))
nrow(dat)
#attach(dat)
#### sliderbar / EA correlations  ####
# does EA correlate with self-reported empathy (IRI)
ea_colnames <- colnames(select(dat, starts_with("EA")))
#replace 999..0 values in the main dat dataframe as NA for all the EA videos
dat <- dat %>% mutate_at(vars(ea_colnames), ~na_if(.,999.0))
#compute average EA for each PS
ea_dat <- dat %>% select(starts_with("EA_")) %>%
transmute(avg_EA = rowMeans(.,na.rm = TRUE)) %>%
as.data.frame()
#assign that average EA vector back to original DF
dat$avg_EA <- ea_dat$avg_EA
#take NaN values and make then NA
dat$avg_EA[is.nan(dat$avg_EA)]<-NA
# look at means for each video
dat %>%
select(starts_with("EA_")) %>%
colMeans(na.rm = TRUE) %>%
t() %>%
kable()
#Videos 129_2 and 147_2 have low EA -- still true.
# calcualte average without those 2 videos and see if correlations are different
select_vars <- c("EA_120_4", "EA_128_2", "EA_167_2", "EA_173_6", "EA_174_3", "EA_181_2")
#avg_EA_select is teh average EA for each ps without the 2 bad videos
dat <-  dat %>% mutate(avg_EA_select = rowMeans(select(., select_vars), na.rm = TRUE))
dat %>%
select(avg_EA, avg_EA_select) %>%
# t() %>%
head %>%
kable()
#get rid of 1 Na value
dat$avg_EA_select[is.nan(dat$avg_EA_select)]<-NA
#write.csv(dat, "completedata.csv")
#saveRDS(dat, "knitdata.rds")
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
avg_EA,
income)%>%
rename(IRI = IRI_total,
Hostility = BPAQ_Hostility,
Delinquency = SRDS_total,
Childhood_Unpredictability = QUIC_unpredict_total,
Empathic_Accuracy_select = avg_EA_select,
Empathic_Accuracy = avg_EA,
Childhood_Maltreatment = MAES_SUM) %>%
pivot_longer(-IRI, names_to = "variable", values_to = "value")
long.dat.ea %>%
#filter(avg_EA_select >0) %>%  # this excludes the negative EA_avg_select value
ggplot(aes(IRI, value, colour = variable)) + geom_point() + facet_wrap(vars(variable), scales = "free") + theme(legend.position="none") +
xlab("IRI Total") +labs(color = "Legend")
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
long.dat.ea <- dat %>%
select(IRI_total,
#IRI_PT,
#IRI_EC,
#IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
avg_EA,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
long.dat.ea <- dat %>%
select(IRI_total,
IRI_PT,
IRI_EC,
IRI_PD,
BPAQ_Hostility,
SRDS_total,
MAES_SUM,
QUIC_unpredict_total,
avg_EA_select,
avg_EA,
income)
table <- rcorr(as.matrix(long.dat.ea),type="pearson")
table
head(dat$IRI_total, IRI_EC)
head(dat$IRI_total, dat$IRI_EC)
head(dat$IRI_total)
head(dat$IRI_EC)
cor(dat$IRI_total, dat$IRI_EC)
cor(dat$IRI_total, dat$avg_EA)
cor(dat$IRI_total, dat$avg_EA_select)
